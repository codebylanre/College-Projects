"""
------------------------------------------------------------------------
[program description]
------------------------------------------------------------------------
Author: Olagunju Abdulbasit
ID:     169076507
Email:  olag6507@laurier.ca
__updated__ = "Oct 19, 2023"
------------------------------------------------------------------------
"""
print("SEE")
from LinkedStack import LinkedStack
from Plant import Plant


def pythonlist_to_Stack(list_plant, empty_stack):
    for plant in list_plant:
        empty_stack.push(plant)
    
    return empty_stack

def equal(stack1, stack2):
    if len(stack1) != len(stack2):
        return False
    
    while not stack1.is_empty():
        if stack1.pop() != stack2.pop():
            return False
    
    return True

def reverse_linked_stack(stack):
    current = stack.head
    while not stack.is_empty():
        newhead = current.get_next()
        newhead = stack.head
    return stack
        



def main():
    print("Testing Task 1")
    
    # Create series of plant objects
    list_plant = [
        Plant("Rose", "Shrub", 30, "Moderate"),
        Plant("Tulip", "Wildflower", 15, "Low"),
        Plant("Maple", "Vine", 120, "High")
    ]
    
    
    
    # Create an emptystack object
    empty_stack = LinkedStack()
    
    
    
    pythonlist_to_Stack(list_plant, empty_stack)

    # Display item in stack
    for i in range (len(empty_stack)):
        plant = empty_stack.pop()
        print(plant)
    
    
    
    print("Testing Task 2")
    stack1 = LinkedStack()
    stack2 = LinkedStack()

    for i in range(5):
        stack1.push(i)
    for i in range(2, 6):
        stack2.push(i)

    print(equal(stack1, stack2))


stack = LinkedStack()
for i in range(5):
    stack.push(i)
print("TAKE")
print(reverse_linked_stack(stack))

    
if __name__ == "__main__":
    pass
    # main()


print("SEE")
    
    
    
    
    